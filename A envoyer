// This is a simple demo script, feel free to edit or delete it
// Find a tutorial and the list of availalbe elements at:
// https://www.pcibex.net/documentation/

PennController.ResetPrefix(null) // Shorten command names (keep this line here)

// Show the 'intro' trial first, then all the 'experiment' trials in a random order
// then send the results and finally show the trial labeled 'bye'
Sequence("intro","Enonce", "bloc1", randomize("experiment") , "bloc2", randomize("experiment2"), SendResults() ,"généralités", "habitudes", "régimes", SendResults(), "bye" )


PennController.DebugOff()

newTrial("intro",
    newImage( "APT.jpg")
        .size(591,118)
        .center()
        .print()
    ,
    defaultText
        .settings.center()
    ,
    newText("<p>Bonjour !  ")
        .print()
    ,     
    
    newText("Merci pour votre participation !")
        .print()
    ,
    
    newText("<p>Dans le cadre d'un projet de recherche à AgroParisTech, nous avons élaboré un questionnaire afin d'étudier les habitudes alimentaires des consommateurs.")
        .print()
    ,
    newText(" <p>Pour toute question ou commentaire, n'hésitez pas à nous contacter à l'adresse suivante : elisa.mosse@agroparistech.fr ")
        .print()
    ,
    
    newText("<p>Veuillez vous mettre dans un <strong>endroit calme</strong> et répondre le plus naturellement possible.")
        .print()
    ,
    
    
    newText("<p>Entrez votre nom et cliquez sur le bouton : Commencer.")
        .print()
    ,
    newTextInput("inputID")
        .center()
        .print()
    ,
    
    newButton("<p> Commencer")
        .center()
        .print()
        .wait()
    ,
    newVar("ID")
        .global()
        .set( getTextInput("inputID") )
)
.log( "ID" , getVar("ID") )

newTrial( "généralités" ,
    newText("<strong> Le questionnaire est bientôt fini ! </strong>")
        .print()
    ,
    defaultText
        .settings.center()
        .color("blue")
    ,
    newScale("Sexe","une femme","un homme", "Autre", "Je ne souhaite pas préciser")
        .settings.before( newText("top","<strong>Vous êtes ... ?</strong>") )
        .settings.radio()
        .settings.labelsPosition("right")
        .print()
        .wait()
    
    ,
    newVar("sex")
        .global()
        .set(getScale("Sexe"))
        
    ,
    newText("<strong>Quel est votre âge ?</strong>")
        .print()
    ,
    newTextInput("age")
        .center()
        .print()
        .wait()
    ,
    
    newVar("age")
        .global()
        .set(getTextInput("age"))
    ,
    newScale("intolerances",   "oui   ", "non   ")
        .settings.before( newText("top", "<strong>Avez-vous des allergies ou des intolérances alimentaires ? </strong>") )
        .settings.radio()
        .settings.labelsPosition("right")
        .print()
        .wait()
    ,
    newVar("intolerances_oui_non")
        .global()
        .set(getScale("intolerances"))
    ,
    newText("Si oui, précisez laquelle. (appuyer sur la touche d'entrée pour passer à la suite)")
        .print()
        .settings.bold()
        .print()
    ,
    newTextInput("allergiesprecisions")
        .center()
        .print()
        .wait()
    ,
    newVar("allergies")
        .global()
        .set(getTextInput("allergiesprecisions"))
    ,
    
    newScale("Classes-socio-professionnelles",   "agriculteurs exploitants", "artisans", "commerçants", "chefs d'entreprise", "cadres et professions supérieures", "professions intermédiaires", "employés","retraités", "étudiants", "autres"   )
        .settings.before( newText("top", "<strong>Quelle est votre situation professionnelle ?</strong>") )
        .settings.radio()
        .settings.labelsPosition("right")
        .print()
        .wait()
    ,
    newVar("csp")
        .global()
        .set(getScale("Classes-socio-professionnelles"))
    ,
    newButton("Valider")
        .print()
        .center()
        .wait()
    )
    
newTrial("habitudes",
    newText("<strong> Avez vous déjà cuisiné un plat avec... </strong>" )
        .print()
    ,
    newScale("habitudes",   "oui   ", "non   ")
        .settings.before( newText("top", "<strong> du tofu ?</strong>") )
        .settings.radio()
        .settings.labelsPosition("right")
        .print()
    ,
    newScale("habitudes",   "oui   ", "non   ")
        .settings.before( newText("top", "<strong> des falafels ?</strong>") )
        .settings.radio()
        .settings.labelsPosition("right")
        .print()
    ,
     newScale("habitudes",   "oui   ", "non   ")
        .settings.before( newText("top", "<strong> des galettes de haricots rouges ?</strong>") )
        .settings.radio()
        .settings.labelsPosition("right")
        .print()
    ,
     newScale("habitudes",   "oui   ", "non   ")
        .settings.before( newText("top", "<strong> des pois cassés ?</strong>") )
        .settings.radio()
        .settings.labelsPosition("right")
        .print()
    ,
     newScale("habitudes",   "oui   ", "non   ")
        .settings.before( newText("top", "<strong> des lentilles ?</strong>") )
        .settings.radio()
        .settings.labelsPosition("right")
        .print()
    ,
     newScale("habitudes",   "oui   ", "non   ")
        .settings.before( newText("top", "<strong> du poulet ?</strong>") )
        .settings.radio()
        .settings.labelsPosition("right")
        .print()
    ,
     newScale("habitudes",   "oui   ", "non   ")
        .settings.before( newText("top", "<strong> du blanc de dinde ?</strong>") )
        .settings.radio()
        .settings.labelsPosition("right")
        .print()
    ,
     newScale("habitudes",   "oui   ", "non   ")
        .settings.before( newText("top", "<strong> du steak ?</strong>") )
        .settings.radio()
        .settings.labelsPosition("right")
        .print()
    ,
     newScale("habitudes",   "oui   ", "non   ")
        .settings.before( newText("top", "<strong> des saucisses ?</strong>") )
        .settings.radio()
        .settings.labelsPosition("right")
        .print()
    ,
     newScale("habitudes",   "oui   ", "non   ")
        .settings.before( newText("top", "<strong> du gigot d'agneau ?</strong>") )
        .settings.radio()
        .settings.labelsPosition("right")
        .print()
        .wait()
)
newTrial("régimes",
    newScale("regimes",   "jamais   ", "une fois ou moins   ", "entre 3 et 4 fois   ", "plus de 4 fois    ")
        .settings.before( newText("top", "<strong> <p> Combien de fois mangez-vous de la viande (viande rouge et volaille) approximativement par semaine?</strong>") )
        .settings.radio()
        .settings.labelsPosition("right")
        .print()
        .wait()
    ,
     newVar("regime")
        .global()
        .set(getScale("regimes"))
    ,
    newScale("changement",   "oui   ", "non   ")
        .settings.before( newText("top", "<strong>Avez-vous déjà changé votre consommation de viande au cours de votre vie?</strong>") )
        .settings.radio()
        .settings.labelsPosition("right")
        .print()
        .wait()
    ,
    newVar("changement_regime")
        .global()
        .set(getScale("changement"))
    ,
    newText("<strong>Si oui, depuis combien de temps?</strong> (appuyer sur la touche d'entrée pour passer à la suite)")
        .print()
    ,
    newTextInput("temps")
        .print()
        .wait()
    ,
    newVar("temps_changement")
        .global()
        .set(getTextInput("temps"))
    ,
    
    newScale("repas",   "oui   ", "non   ")
        .settings.before( newText("top", "<strong>Préparez-vous vos propres repas?</strong>") )
        .settings.radio()
        .settings.labelsPosition("right")
        .print()
        .wait()
    ,
     newVar("preparer_repas_oui_non")
        .global()
        .set(getScale("repas"))
    ,
    newScale("frequences","jamais", "une fois par semaine   ", "entre 2 et 4 fois par semaine  ", "une fois par jour   ", "Tous les repas      "    )
        .settings.before( newText("top", "<strong>Combien de fois préparez-vous vos propres repas?</strong>") )
        .settings.radio()
        .settings.labelsPosition("right")
        .print()
        .wait()
    ,
    newVar("preparer_repas_frequence")
        .global()
        .set(getScale("frequences"))
    ,
    
    newScale("vegan",   "oui   ", "non   ")
        .settings.before( newText("top", "<strong> Avez-vous quelqu'un de végétarien ou vegan dans votre entourage proche?</strong>") )
        .settings.radio()
        .settings.labelsPosition("right")
        .print()
        .wait()
    ,
    newVar("amis_vege_vegan")
        .global()
        .set(getScale("vegan"))
    ,
    
    
     newScale("repas_vege",   "oui   ", "non   ")
        .settings.before( newText("top", "<strong>Mangez-vous avec quelqu'un de végétarien plus d'une fois par semaine?</strong>") )
        .settings.radio()
        .settings.labelsPosition("right")
        .print()
        .wait()
    ,
    
    newVar("manger_ac_vege")
        .global()
        .set(getScale("repas_vege"))
    ,
    newScale("vege_conversation",   "1", "2","3","4","5")
        .settings.before( newText("top", "<strong>Le végétarisme est-il un sujet de conversation fréquent avec votre entourage ? </strong> (échelle de 1 à 5, avec 1=jamais et 5=beaucoup?") )
        .settings.radio()
        .settings.labelsPosition("right")
        .print()
        .wait()
    ,
    newVar("frequence_conversation_vege")
        .global()
        .set(getScale("vege_conversation"))
    ,
    newScale("enjeux",   "1", "2","3","4","5")
        .settings.before( newText("top", "<strong>Estimez vous que vous connaissez l’importance des enjeux santé, éthique et environnementaux associés à la consommation de viande ?</strong>") )
        .settings.before( newText("top", "(échelle de 1 à 5, avec 1 = pas du tout et 5 = beaucoup)") )
        .settings.radio()
        .settings.labelsPosition("right")
        .print()
        .wait()
    ,
    newVar("connaissance_enjeux")
        .global()
        .set(getScale("enjeux"))
    ,
    newText("<strong> <p> Des commentaires à ajouter ? ex : si vous détestez un aliment que l'on vous a donné. </strong> (appuyer sur la touche d'entrée pour passer à la suite)")
        .print()
        
    ,
    newTextInput("com")
        .center()
        .print()
        .wait()
    ,
    newVar("commentaires")
        .global()
        .set(getTextInput("com"))
    ,
    newButton("Valider")
        .center()
        .print()
        .wait()
     
)

.log( "age" , getVar("age") )
.log("sex", getVar("sex"))
.log("intoleranceson", getVar("intolerances_oui_non"))
.log("allergies", getVar("allergies"))
.log("csp", getVar("csp"))
.log( "regime" , getVar("regime") )
.log("changement_regime", getVar("changement_regime"))
.log("temps_changement", getVar("temps_changement"))
.log("preparer_repas_oui_non", getVar("preparer_repas_oui_non"))
.log("preparer_repas_frequence", getVar("preparer_repas_frequence"))
.log( "amis_vege_vegan" , getVar("amis_vege_vegan") )
.log("manger_ac_vege", getVar("manger_ac_vege"))
.log("frequence_conversation_vege", getVar("frequence_conversation_vege"))
.log("connaissance_enjeux", getVar("connaissance_enjeux"))
.log("commentaires", getVar("commentaires"))

SendResults()

newTrial("Enonce",
    defaultText
        .settings.center()
    ,    
    newText("<p> <strong> C’est l’heure de manger. Imaginez-vous, en situation normale, avant le confinement, en train de vous préparer votre repas du midi, et plus précisément votre plat principal. </strong>")
        .print()
    ,
    newText("<p>Vous avez tout à disposition dans votre cuisine.")
        .print()
    ,
    newText("<p> <strong> Vous ne devez choisir, pour l'instant, qu'un seul accompagnement. </strong>")
        .print()
    ,
    newButton("Suivant")
            .print()
            .center()
            .wait()
)

newTrial("bloc1",
    defaultText
        .settings.center()
    ,
    newText("<p> Veuillez composer un plat principal pour le midi.") 
        .print()
    ,
    newText(" Veuillez écrire <strong>UN seul </strong> accompagnement que vous cuisineriez avec un aliment que l'on va vous donner.")
        .print()
    ,
    newText("Veuillez ne pas choisir de protéines animales pour vos accompagnements (pas de viande, poisson, fromage, oeuf).</p>")
        .print()
    ,    
    
    newButton("<p> 1 seul aliment")
        .print()
        .center()
        .wait()
)

// This Template command generates as many trials as there are rows in myTable.csv
Template( "myTable.csv" ,
    // Row will iteratively point to every row in myTable.csv
    row => newTrial( "experiment" ,
        newText(  "<p> Appuyer sur entrée après avoir écrit votre réponse svp puis sur Suivant." )
            .center()
            .print()
        ,
        newTextInput()
            .before( newText( row.alimentimpose ) )  // Print the sentence to the left of the list
            .print()
            .wait()
            .log()                              // Make sure to log the participant's selection
        ,
        newButton("Suivant")
            .print()
            .center()
            .wait()
    )
    .log( "alimentimpose" , row.alimentimpose )
    .log( "choix" , row.choix )
    // Add these two columns to the results lines of these Template-based trials
)

newTrial("bloc2",
    newText("<p>Veuillez écrire <strong> UN ou PLUSIEURS </strong>accompagnement(s) que vous cuisineriez avec un aliment que l'on va vous donner.")
        .print()
    ,
    newText("<p>Veuillez ne pas choisir de protéines animales pour vos accompagnements (pas de viande, poisson, fromage, oeuf).")
            .print()
    ,
    newButton("1 ou plusieurs aliment(s)")
            .print()
            .center()
            .wait()
)

Template( "myTable.csv" ,
    // Row will iteratively point to every row in myTable.csv
    row => newTrial( "experiment2" ,
         newText(  "<p>Appuyer sur entrée après avoir écrit votre réponse svp puis sur Suivant." )
            .center()
            .print()
        ,
        newTextInput()
            .before( newText( row.alimentimpose) ) // Print the sentence to the left of the list
            .print()
            .wait()
            .log()                              // Make sure to log the participant's selection
        ,
        newButton("Suivant")
            .print()
            .center()
            .wait()
    )
    .log( "alimentimpose" , row.alimentimpose )
    .log( "choix2" , row.choix2 )
    // Add these two columns to the results lines of these Template-based trials
)

// Spaces and linebreaks don't matter to the script: we've only been using them for the sake of readability
newTrial( "bye" ,
    newText("Merci pour votre participation !")
        .print()
    ,
    newButton("void")
        .center()
        .wait()
   
)
.setOption( "countsForProgressBar" , false )
// Make sure the progress bar is full upon reaching this last (non-)trial
